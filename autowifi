#!/bin/sh

# Glorious docuemntation because there is no way i'll remember how this works
# Loop iterates over 20 connections, if there are more, they will not get processed
# At the begining of each iteration information about local networks is gathered and the network name is extracted. How?
#   Here's how. There are always 28 characters before the network name, so they get cut
#   Then the first sed command is used to grab the ith line of the network list
#   The next sed command looks at the begiing of the line and captures anything that is followed by 2 or more spaces, as that is what columns are delimited by.
# Then comes the main if block
#   The script looks for the corresponding passwd-file for the network name
#       There are 2 possible formats to the script checks for both (the check is really fast, so it doesn't matter)
#   The formats differ in the fact that first one has single quotes around it and the second one doesn't
#   If one of the files exists, the script uses nmcli to connect to it, using passwd-file confirmed to exist earlier as, well, passwd-file
#   If the operation succeeds and connection is established, the loop is broken, if not (e.g. password was wrong) it will just continue
#       This will be a major slowdown, since the attempted connection is the slowest part of the process and the name of the network cam appear multiple times in the list.


# P.S. I have just discovered a great optimisation i could do, but it is not going to get implemented.
#   Basically i could store the whole output of nmcli device wifi, count how many ines it has (e.g. with wc -l) and iterate that many times, each time taking the next line
# P.P.S Most hoops i'm jumping through here are due to the fact taht wifi names cana have spaces in them
# P.P.P.S. On security. This is not secure. But it's secure enough, since noone without root priveleges can even see that the folder which passwd-file s are in even exists.




for i in 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
do

    NET="$(nmcli device wifi | cut -c28- | sed -n "$i p")"
    NET="${NET%%  *}"
    if [ -f /etc/NetworkManager/system-connections/\'"$NET".passwd\' ]
    then

        sudo nmcli connection up "$NET" passwd-file /etc/NetworkManager/system-connections/\'"$NET".passwd\' && break

    elif [ -f /etc/NetworkManager/system-connections/"$NET".passwd ]
    then

        sudo nmcli connection up "$NET" passwd-file /etc/NetworkManager/system-connections/"$NET".passwd && break

    fi

done

